Parameters:

  EarthdataUsername:
    Type: String

  EarthdataPassword:
    Type: String
    NoEcho: true

  VpcId:
    Type: AWS::EC2::VPC::Id

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>

Resources:

  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      LifecycleConfiguration:
        Rules:
          - Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 1
      Tags:
        - Key: DAR
          Value: "NO"

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "Security group for ${AWS::StackName} lambda function"
      VpcId: !Ref VpcId

  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      Code: package.zip
      Handler: opera_rtc_s1_browse.create_browse.lambda_handler
      MemorySize: 512
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.11
      Timeout: 300
      VpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGroupId
        SubnetIds: !Ref SubnetIds
      Environment:
        Variables:
          EARTHDATA_USERNAME: !Ref EarthdataUsername
          EARTHDATA_PASSWORD: !Ref EarthdataPassword
          BUCKET: !Ref Bucket
          GDAL_DATA: /var/task/share/gdal
          PROJ_LIB: /var/task/share/proj

  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Lambda}"
      RetentionInDays: 90

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Action: sts:AssumeRole
          Principal:
            Service: lambda.amazonaws.com
          Effect: Allow
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
        - PolicyName: policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*"
              - Effect: Allow
                Action: s3:PutObject
                Resource: !Sub "arn:aws:s3:::${Bucket}/*"
